# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '95959df3-d18a-4340-aead-7e39b6018f4c'
  imageRepository: 'kjidevazurevotingappredis'
  containerRegistry: 'demodemocr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'demodemocrf5df-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    # Upload Kubernetes manifests to current artifact Pipeline from folder /k8s
    - publish: $(System.DefaultWorkingDirectory)/azure-vote-all-in-one-redis.yaml
      artifact: manifests
      displayName: 'Publish Artifact: manifests'
          
    # - upload: manifests
    #  artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'kjidevazurevotingappredis.demodemo-ns'
    strategy:
      runOnce:
        deploy:
          steps:
          # Download manifest from current artifacts pipeline
          - download: current
            artifact: manifests
            displayName: 'Download Artifact: manifests'

          - task: Bash@3
            displayName: 'Show all sys env variables'
            inputs:
              targetType: 'inline'
              script: 'env | sort'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'demodemo-k8s-demodemo-ns'
              manifests: '$(Pipeline.Workspace)/manifests/azure-vote-all-in-one-redis.yaml'
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'
              imagePullSecrets: '$(imagePullSecret)'

